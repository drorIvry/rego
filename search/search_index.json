{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome REGO","text":"<p> rego /\u02c8re.\u0261o\u02d0/ verb. Definitions: manage, direct rule, guide </p> <p> REGO is a modern, fast (high-performance), framework for running any docker image as a kubernetes job with a fully managed api </p> <p> </p> <p></p> <p>Rego is a </p> <ul> <li>\ud83d\udd25  blazingly fast</li> <li>\ud83e\udd47 API first</li> <li>\ud83c\udf08 lightweight</li> <li>\ud83d\udd5c Task orchestrator</li> </ul> <p>It is designed to allow asynchronous workloads to be deployed over Kubernetes with minimal effort, while also providing a management API that can keep track of progress and run history.</p> <p>Star us on github.</p>"},{"location":"#use-cases","title":"Use cases","text":"<ul> <li>Run async workloads that needs to be managed (or visible to) a UI</li> <li>Integrate non production-grade code (data scientist's R code for example) within your production environment in a contained way</li> <li>Use to run stuff periodically with run history</li> </ul>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li> <p>Go: any one of the three latest major releases (we test it with these).</p> </li> <li> <p>Kubernetes: tested on v1.24+</p> </li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#kubernetes","title":"Kubernetes","text":"<pre><code>kubectl apply -f https://raw.githubusercontent.com/drorIvry/rego/main/deploy/deployment.yml\n</code></pre>"},{"location":"#helm","title":"Helm","text":"<pre><code>helm repo add rego https://drorivry.github.io/rego-charts/\nhelm install --generate-name rego/rego\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>With rego you can use the API to create and run k8s jobs with a managed API.</p> <pre><code>curl -X POST -d '{\"image\": \"hello-world\"}' localhost:4004/api/v1/task\n</code></pre> <p>This will start a job on your k8s cluster that'll run the docker image hello-world</p> <p>the response will look something like </p> <pre><code>{\n  \"definition_id\": \"a36fbd9b-bf8a-4c59-94c1-9938b6707e8f\",\n  \"message\": \"created\"\n}\n</code></pre> <p>we can use the definition ID to see the task's running status</p> <pre><code>curl http://localhost:4004/api/v1/task/a36fbd9b-bf8a-4c59-94c1-9938b6707e8f/latest\n</code></pre> <p>which will respond with</p> <pre><code>{\n  \"ID\": 0,\n  \"CreatedAt\": \"2023-04-02T11:53:08.2008054+03:00\",\n  \"UpdatedAt\": \"2023-04-02T11:53:16.2032147+03:00\",\n  \"DeletedAt\": null,\n  \"id\": \"7eb53d97-7380-4e0b-82a6-b38fbf9119d2\",\n  \"task_definition_id\": \"a36fbd9b-bf8a-4c59-94c1-9938b6707e8f\",\n  \"status_code\": 500,\n  \"status\": \"SUCCESS\",\n  \"image\": \"hello-world\",\n  \"name\": \"test\",\n  \"ttl_seconds_after_finished\": 10,\n  \"namespace\": \"test\",\n  \"args\": \"[\\\"1111\\\", \\\"33333\\\"]\",\n  \"metadata\": {\n    \"ttlSecondsAfterFinished\": 1\n  }\n}\n</code></pre> <p>which indicates the success.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions from the community! If you'd like to contribute to the project, please follow these guidelines:</p> <ul> <li>Fork the repository</li> <li>Create a new branch: git checkout -b new-feature</li> <li>Make your changes and commit them: git commit -m \"Add new feature\"</li> <li>Push your changes to your fork: git push origin new-feature</li> <li>Create a pull request to the main repository</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file for details.</p>"}]}